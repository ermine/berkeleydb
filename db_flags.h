#define MLV_DB_CREATE		0xC854E9BB
#define MLV_DB_IMMUTABLE_KEY		0x50D78FC3
#define MLV_DB_FOREIGN_ABORT		0x985FDA09
#define MLV_DB_FOREIGN_CASCADE		0xB4736D11
#define MLV_DB_FOREIGN_NULLIFY		0x41E7F053
#define MLV_DB_NOSYNC		0x326DB9FB
#define MLV_DB_FREELIST_ONLY		0x53ED4481
#define MLV_DB_FREE_SPACE		0x1BA73FE9
#define MLV_DB_CONSUME		0x90D72137
#define MLV_DB_MULTIPLE		0x13DF9C63
#define MLV_DB_MULTIPLE_KEY		0x5D2B4A63
#define MLV_DB_READ_COMMITTED		0x88F8E729
#define MLV_DB_READ_UNCOMMITTED		0x8BC7C837
#define MLV_DB_RMW		0xDF812777
#define MLV_DB_CONSUME_WAIT		0x3B7F37B3
#define MLV_DB_GET_BOTH		0x3A178097
#define MLV_DB_SET_RECNO		0xC09B64E7
#define MLV_DB_IGNORE_LEASE		0x8C09615D
#define MLV_DB_JOIN_NOSORT		0x2A7BBB27
#define MLV_DB_AUTO_COMMIT		0xDDAE210D
#define MLV_DB_EXCL		0xA06262FB
#define MLV_DB_MULTIVERSION		0x9FB8CCC1
#define MLV_DB_NOMMAP		0x2A6CDDE3
#define MLV_DB_RDONLY		0xB51D6FFF
#define MLV_DB_THREAD		0xEDA91157
#define MLV_DB_TRUNCATE		0x7CB9550F
#define MLV_DB_APPEND		0xEFDDDF77
#define MLV_DB_NODUPDATA		0x7A5C67CF
#define MLV_DB_NOOVERWRITE		0x9D73AA13
#define MLV_DB_OVERWRITE_DUP		0xDBE10295
#define MLV_DB_ENCRYPT_AES		0xFFAEB669
#define MLV_DB_CHKSUM		0x4C5B320D
#define MLV_DB_ENCRYPT		0xBE592A89
#define MLV_DB_TXN_NOT_DURABLE		0xF5B0A0F3
#define MLV_DB_DUP		0xDF6BF63D
#define MLV_DB_DUPSORT		0xFDDBA2F9
#define MLV_DB_RECNUM		0xCC0D89AF
#define MLV_DB_REVSPLITOFF		0x7AA0372F
#define MLV_DB_INORDER		0xDC82DAD1
#define MLV_DB_RENUMBER		0xE2983DBB
#define MLV_DB_SNAPSHOT		0x222E08CB
#define MLV_DB_FAST_STAT		0x768510AD
#define MLV_DB_STAT_ALL		0xC036B7EF
#define MLV_DB_SALVAGE		0x47C6700D
#define MLV_DB_AGGRESSIVE		0xCF6C2CCB
#define MLV_DB_PRINTABLE		0xBB6721CD
#define MLV_DB_NOORDERCHK		0x2BEF73F5
#define MLV_DB_ORDERCHKONLY		0xF3080CB
#define MLV_DB_WRITECURSOR		0x1A7B4EA9
#define MLV_DB_TXN_SNAPSHOT		0xBD72F975
#define MLV_DB_POSITION		0x74BB1995
#define MLV_DB_CURRENT		0xF6E96631
#define MLV_DB_FIRST		0xC8C3CA9F
#define MLV_DB_GET_BOTH_RANGE		0x3A355ED3
#define MLV_DB_GET_RECNO		0xF9F98CCF
#define MLV_DB_JOIN_ITEM		0x3666FB0F
#define MLV_DB_LAST		0xA98093EF
#define MLV_DB_NEXT		0xAC2B8929
#define MLV_DB_NEXT_DUP		0x9298E69
#define MLV_DB_NEXT_NODUP		0x4D7B61A7
#define MLV_DB_PREV		0xAEE3FD29
#define MLV_DB_PREV_DUP		0x432C0269
#define MLV_DB_PREV_NODUP		0xE402D5A7
#define MLV_DB_SET		0xDF829E03
#define MLV_DB_SET_RANGE		0xBB62553F
#define MLV_DB_AFTER		0x2CDA677
#define MLV_DB_BEFORE		0x49AC4C1
#define MLV_DB_KEYFIRST		0x427934A5
#define MLV_DB_KEYLAST		0xCC7CCCA9
#define MLV_DB_INIT_CDB		0xBAFCFD67
#define MLV_DB_INIT_LOCK		0xEE5746F3
#define MLV_DB_INIT_LOG		0xBB0AB92D
#define MLV_DB_INIT_MPOOL		0xC638A0B7
#define MLV_DB_INIT_REP		0xBB13C2DF
#define MLV_DB_INIT_TXN		0xBB16ECF9
#define MLV_DB_RECOVER		0xC11ED307
#define MLV_DB_RECOVER_FATAL		0x805549D1
#define MLV_DB_USE_ENVIRON		0xD120D579
#define MLV_DB_USE_ENVIRON_ROOT		0xEC8FFB8B
#define MLV_DB_LOCKDOWN		0x1838A3DD
#define MLV_DB_FAILCHK		0x8CFBABCF
#define MLV_DB_PRIVATE		0x720087C5
#define MLV_DB_REGISTER		0x80052509
#define MLV_DB_SYSTEM_MEM		0xADFC778D
#define MLV_DB_FORCE		0xD0B23E15
#define MLV_DB_CDB_ALLDB		0x8CB38801
#define MLV_DB_DIRECT_DB		0x2EF975A7
#define MLV_DB_DSYNC_DB		0xDC9E4CFF
#define MLV_DB_NOLOCKING		0x584D80AB
#define MLV_DB_NOPANIC		0x597352EB
#define MLV_DB_OVERWRITE		0x50327755
#define MLV_DB_PANIC_ENVIRONMENT		0xCB557495
#define MLV_DB_REGION_INIT		0xD7BCD7F5
#define MLV_DB_TIME_NOTGRANTED		0xC536B8F3
#define MLV_DB_TXN_NOSYNC		0x4FCA4C25
#define MLV_DB_TXN_NOWAIT		0x54EF8C59
#define MLV_DB_TXN_WRITE_NOSYNC		0xB75FAAA5
#define MLV_DB_YIELDCPU		0xB47F0239
#define MLV_DB_MUTEX_PROCESS_ONLY		0x50CC803B
#define MLV_DB_SET_LOCK_TIMEOUT		0x534E8C57
#define MLV_DB_SET_REG_TIMEOUT 		0xDB786AD1
#define MLV_DB_SET_TXN_TIMEOUT		0xB4D74D9D
#define MLV_DB_STAT_CLEAR		0x92D733C7
#define MLV_DB_STAT_SUBSYSTEM		0x82A678B
#define MLV_DB_LOCK_NOWAIT		0xF8AA3593
#define MLV_DB_STAT_LOCK_CONF		0x91AF12DD
#define MLV_DB_STAT_LOCK_LOCKERS		0x25AA1DE3
#define MLV_DB_STAT_LOCK_OBJECTS		0xC18E0ED5
#define MLV_DB_STAT_LOCK_PARAMS		0xF5104AA1
#define MLV_DB_ARCH_ABS		0xD6984495
#define MLV_DB_ARCH_DATA		0xF2998265
#define MLV_DB_ARCH_LOG		0xD6A90CB9
#define MLV_DB_ARCH_REMOVE		0xB1D17A99
#define MLV_DB_FLUSH		0xCCBF9FC7
#define MLV_DB_LOG_DIRECT		0x6C04268B
#define MLV_DB_LOG_DSYNC		0x6995A007
#define MLV_DB_LOG_AUTO_REMOVE		0x62C11971
#define MLV_DB_LOG_IN_MEMORY		0xC4EB397F
#define MLV_DB_LOG_ZERO		0x7020E889
#define MLV_DB_STAT_MEMP_HASH		0x566C911
#define MLV_DB_MPOOL_CREATE		0x730ED167
#define MLV_DB_MPOOL_DIRTY		0xB9EB2C37
#define MLV_DB_MPOOL_EDIT		0x9D1A7803
#define MLV_DB_MPOOL_LAST		0xA656F89B
#define MLV_DB_MPOOL_NEW		0x95FEDC53
#define MLV_DB_DIRECT		0x490AB215
#define MLV_DB_ODDFILESIZE		0x9905E097
#define MLV_DB_MPOOL_NOFILE		0xCBDFC9E9
#define MLV_DB_MPOOL_UNLINK		0x46004115
#define MLV_DB_MUTEX_SELF_BLOCK		0xC972E477
#define MLV_DB_REP_ANYWHERE		0xBDB1613D
#define MLV_DB_REP_NOBUFFER		0x2B538E49
#define MLV_DB_REP_PERMANENT		0xA7285317
#define MLV_DB_REP_REREQUEST		0x34BC6B3
#define MLV_DB_REP_CLIENT		0x95FC955D
#define MLV_DB_REP_MASTER		0xF79E020B
#define MLV_DB_REPMGR_PEER		0x19008F0B
#define MLV_DB_REP_ELECTION		0xEA849FF9
#define MLV_DB_SEQ_DEC		0x488D8143
#define MLV_DB_SEQ_INC		0x4895277B
#define MLV_DB_SEQ_WRAP		0x4C756BD7
#define MLV_DB_TXN_SYNC		0x7FA6C7A3
#define MLV_DB_TXN_WAIT		0x84CC07D7

typedef struct {
  u_int32_t flag;
  int32 variant;
} map_flag;

static map_flag flags_db_associate[] = {
  {DB_CREATE, MLV_DB_CREATE},
  {DB_IMMUTABLE_KEY, MLV_DB_IMMUTABLE_KEY},
};

static map_flag flags_db_associate_foreign[] = {
  {DB_FOREIGN_ABORT, MLV_DB_FOREIGN_ABORT},
  {DB_FOREIGN_CASCADE, MLV_DB_FOREIGN_CASCADE},
  {DB_FOREIGN_NULLIFY, MLV_DB_FOREIGN_NULLIFY},
};

static map_flag flags_db_close[] = {
  {DB_NOSYNC, MLV_DB_NOSYNC},
};

static map_flag flags_db_compact[] = {
  {DB_FREELIST_ONLY, MLV_DB_FREELIST_ONLY},
  {DB_FREE_SPACE, MLV_DB_FREE_SPACE},
};

static map_flag flags_db_del[] = {
  {DB_CONSUME, MLV_DB_CONSUME},
  {DB_MULTIPLE, MLV_DB_MULTIPLE},
  {DB_MULTIPLE_KEY, MLV_DB_MULTIPLE_KEY},
};

static map_flag flags_db_exists[] = {
  {DB_READ_COMMITTED, MLV_DB_READ_COMMITTED},
  {DB_READ_UNCOMMITTED, MLV_DB_READ_UNCOMMITTED},
  {DB_RMW, MLV_DB_RMW},
};

static map_flag flags_db_get[] = {
  {DB_CONSUME, MLV_DB_CONSUME},
  {DB_CONSUME_WAIT, MLV_DB_CONSUME_WAIT},
  {DB_GET_BOTH, MLV_DB_GET_BOTH},
  {DB_SET_RECNO, MLV_DB_SET_RECNO},
  {DB_IGNORE_LEASE, MLV_DB_IGNORE_LEASE},
  {DB_MULTIPLE, MLV_DB_MULTIPLE},
  {DB_READ_COMMITTED, MLV_DB_READ_COMMITTED},
  {DB_READ_UNCOMMITTED, MLV_DB_READ_UNCOMMITTED},
  {DB_RMW, MLV_DB_RMW},
};

static map_flag flags_db_join[] = {
  {DB_JOIN_NOSORT, MLV_DB_JOIN_NOSORT},
};

static map_flag flags_db_open[] = {
  {DB_AUTO_COMMIT, MLV_DB_AUTO_COMMIT},
  {DB_CREATE, MLV_DB_CREATE},
  {DB_EXCL, MLV_DB_EXCL},
  {DB_MULTIVERSION, MLV_DB_MULTIVERSION},
  {DB_NOMMAP, MLV_DB_NOMMAP},
  {DB_RDONLY, MLV_DB_RDONLY},
  {DB_READ_UNCOMMITTED, MLV_DB_READ_UNCOMMITTED},
  {DB_THREAD, MLV_DB_THREAD},
  {DB_TRUNCATE, MLV_DB_TRUNCATE},
};

static map_flag flags_db_put[] = {
  {DB_APPEND, MLV_DB_APPEND},
  {DB_NODUPDATA, MLV_DB_NODUPDATA},
  {DB_NOOVERWRITE, MLV_DB_NOOVERWRITE},
  {DB_MULTIPLE, MLV_DB_MULTIPLE},
  {DB_MULTIPLE_KEY, MLV_DB_MULTIPLE_KEY},
  {DB_OVERWRITE_DUP, MLV_DB_OVERWRITE_DUP},
};

static map_flag flags_db_encrypt[] = {
  {DB_ENCRYPT_AES, MLV_DB_ENCRYPT_AES},
};

static map_flag flags_db[] = {
  {DB_CHKSUM, MLV_DB_CHKSUM},
  {DB_ENCRYPT, MLV_DB_ENCRYPT},
  {DB_TXN_NOT_DURABLE, MLV_DB_TXN_NOT_DURABLE},
  {DB_DUP, MLV_DB_DUP},
  {DB_DUPSORT, MLV_DB_DUPSORT},
  {DB_RECNUM, MLV_DB_RECNUM},
  {DB_REVSPLITOFF, MLV_DB_REVSPLITOFF},
  {DB_INORDER, MLV_DB_INORDER},
  {DB_RENUMBER, MLV_DB_RENUMBER},
  {DB_SNAPSHOT, MLV_DB_SNAPSHOT},
};

static map_flag flags_db_stat[] = {
  {DB_FAST_STAT, MLV_DB_FAST_STAT},
  {DB_READ_COMMITTED, MLV_DB_READ_COMMITTED},
  {DB_READ_UNCOMMITTED, MLV_DB_READ_UNCOMMITTED},
};

static map_flag flags_db_stat_print[] = {
  {DB_FAST_STAT, MLV_DB_FAST_STAT},
  {DB_STAT_ALL, MLV_DB_STAT_ALL},
};

static map_flag flags_db_upgrade[] = {
  {DB_DUPSORT, MLV_DB_DUPSORT},
};

static map_flag flags_db_verify[] = {
  {DB_SALVAGE, MLV_DB_SALVAGE},
  {DB_AGGRESSIVE, MLV_DB_AGGRESSIVE},
  {DB_PRINTABLE, MLV_DB_PRINTABLE},
  {DB_NOORDERCHK, MLV_DB_NOORDERCHK},
  {DB_ORDERCHKONLY, MLV_DB_ORDERCHKONLY},
};

static map_flag flags_db_cursor[] = {
  {DB_READ_COMMITTED, MLV_DB_READ_COMMITTED},
  {DB_READ_UNCOMMITTED, MLV_DB_READ_UNCOMMITTED},
  {DB_WRITECURSOR, MLV_DB_WRITECURSOR},
  {DB_TXN_SNAPSHOT, MLV_DB_TXN_SNAPSHOT},
};

static map_flag flags_dbcursor_del[] = {
  {DB_CONSUME, MLV_DB_CONSUME},
};

static map_flag flags_dbcursor_dup[] = {
  {DB_POSITION, MLV_DB_POSITION},
};

static map_flag flags_dbcursor_get[] = {
  {DB_CURRENT, MLV_DB_CURRENT},
  {DB_FIRST, MLV_DB_FIRST},
  {DB_GET_BOTH, MLV_DB_GET_BOTH},
  {DB_GET_BOTH_RANGE, MLV_DB_GET_BOTH_RANGE},
  {DB_GET_RECNO, MLV_DB_GET_RECNO},
  {DB_JOIN_ITEM, MLV_DB_JOIN_ITEM},
  {DB_LAST, MLV_DB_LAST},
  {DB_NEXT, MLV_DB_NEXT},
  {DB_NEXT_DUP, MLV_DB_NEXT_DUP},
  {DB_NEXT_NODUP, MLV_DB_NEXT_NODUP},
  {DB_PREV, MLV_DB_PREV},
  {DB_PREV_DUP, MLV_DB_PREV_DUP},
  {DB_PREV_NODUP, MLV_DB_PREV_NODUP},
  {DB_SET, MLV_DB_SET},
  {DB_SET_RANGE, MLV_DB_SET_RANGE},
  {DB_SET_RECNO, MLV_DB_SET_RECNO},
  {DB_IGNORE_LEASE, MLV_DB_IGNORE_LEASE},
  {DB_READ_COMMITTED, MLV_DB_READ_COMMITTED},
  {DB_READ_UNCOMMITTED, MLV_DB_READ_UNCOMMITTED},
  {DB_MULTIPLE, MLV_DB_MULTIPLE},
  {DB_MULTIPLE_KEY, MLV_DB_MULTIPLE_KEY},
  {DB_RMW, MLV_DB_RMW},
};

static map_flag flags_dbcursor_put[] = {
  {DB_AFTER, MLV_DB_AFTER},
  {DB_BEFORE, MLV_DB_BEFORE},
  {DB_CURRENT, MLV_DB_CURRENT},
  {DB_KEYFIRST, MLV_DB_KEYFIRST},
  {DB_KEYLAST, MLV_DB_KEYLAST},
  {DB_NODUPDATA, MLV_DB_NODUPDATA},
};

static map_flag flags_dbenv_dbremove[] = {
  {DB_AUTO_COMMIT, MLV_DB_AUTO_COMMIT},
};

static map_flag flags_dbenv_dbrename[] = {
  {DB_AUTO_COMMIT, MLV_DB_AUTO_COMMIT},
};

static map_flag flags_dbenv_fileid_reset[] = {
  {DB_ENCRYPT, MLV_DB_ENCRYPT},
};

static map_flag flags_dbenv_lsn_reset[] = {
  {DB_ENCRYPT, MLV_DB_ENCRYPT},
};

static map_flag flags_dbenv_open[] = {
  {DB_INIT_CDB, MLV_DB_INIT_CDB},
  {DB_INIT_LOCK, MLV_DB_INIT_LOCK},
  {DB_INIT_LOG, MLV_DB_INIT_LOG},
  {DB_INIT_MPOOL, MLV_DB_INIT_MPOOL},
  {DB_INIT_REP, MLV_DB_INIT_REP},
  {DB_INIT_TXN, MLV_DB_INIT_TXN},
  {DB_RECOVER, MLV_DB_RECOVER},
  {DB_RECOVER_FATAL, MLV_DB_RECOVER_FATAL},
  {DB_USE_ENVIRON, MLV_DB_USE_ENVIRON},
  {DB_USE_ENVIRON_ROOT, MLV_DB_USE_ENVIRON_ROOT},
  {DB_CREATE, MLV_DB_CREATE},
  {DB_LOCKDOWN, MLV_DB_LOCKDOWN},
  {DB_FAILCHK, MLV_DB_FAILCHK},
  {DB_PRIVATE, MLV_DB_PRIVATE},
  {DB_REGISTER, MLV_DB_REGISTER},
  {DB_SYSTEM_MEM, MLV_DB_SYSTEM_MEM},
  {DB_THREAD, MLV_DB_THREAD},
};

static map_flag flags_dbenv_remove[] = {
  {DB_FORCE, MLV_DB_FORCE},
  {DB_USE_ENVIRON, MLV_DB_USE_ENVIRON},
  {DB_USE_ENVIRON_ROOT, MLV_DB_USE_ENVIRON_ROOT},
};

static map_flag flags_dbenv_encrypt[] = {
  {DB_ENCRYPT_AES, MLV_DB_ENCRYPT_AES},
};

static map_flag flags_dbenv[] = {
  {DB_AUTO_COMMIT, MLV_DB_AUTO_COMMIT},
  {DB_CDB_ALLDB, MLV_DB_CDB_ALLDB},
  {DB_DIRECT_DB, MLV_DB_DIRECT_DB},
  {DB_DSYNC_DB, MLV_DB_DSYNC_DB},
  {DB_MULTIVERSION, MLV_DB_MULTIVERSION},
  {DB_NOLOCKING, MLV_DB_NOLOCKING},
  {DB_NOMMAP, MLV_DB_NOMMAP},
  {DB_NOPANIC, MLV_DB_NOPANIC},
  {DB_OVERWRITE, MLV_DB_OVERWRITE},
  {DB_PANIC_ENVIRONMENT, MLV_DB_PANIC_ENVIRONMENT},
  {DB_REGION_INIT, MLV_DB_REGION_INIT},
  {DB_TIME_NOTGRANTED, MLV_DB_TIME_NOTGRANTED},
  {DB_TXN_NOSYNC, MLV_DB_TXN_NOSYNC},
  {DB_TXN_NOWAIT, MLV_DB_TXN_NOWAIT},
  {DB_TXN_SNAPSHOT, MLV_DB_TXN_SNAPSHOT},
  {DB_TXN_WRITE_NOSYNC, MLV_DB_TXN_WRITE_NOSYNC},
  {DB_YIELDCPU, MLV_DB_YIELDCPU},
};

static map_flag flags_dbenv_isalive[] = {
  {DB_MUTEX_PROCESS_ONLY, MLV_DB_MUTEX_PROCESS_ONLY},
};

static map_flag flags_dbenv_timeout[] = {
  {DB_SET_LOCK_TIMEOUT, MLV_DB_SET_LOCK_TIMEOUT},
  {DB_SET_REG_TIMEOUT , MLV_DB_SET_REG_TIMEOUT },
  {DB_SET_TXN_TIMEOUT, MLV_DB_SET_TXN_TIMEOUT},
};

static map_flag flags_dbenv_get_timeout[] = {
  {DB_SET_LOCK_TIMEOUT, MLV_DB_SET_LOCK_TIMEOUT},
  {DB_SET_TXN_TIMEOUT, MLV_DB_SET_TXN_TIMEOUT},
};

static map_flag flags_dbenv_stat_print[] = {
  {DB_STAT_ALL, MLV_DB_STAT_ALL},
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
  {DB_STAT_SUBSYSTEM, MLV_DB_STAT_SUBSYSTEM},
};

static map_flag flags_dbenv_lock_get[] = {
  {DB_LOCK_NOWAIT, MLV_DB_LOCK_NOWAIT},
};

static map_flag flags_dbenv_lock_stat[] = {
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
};

static map_flag flags_dbenv_lock_stat_print[] = {
  {DB_STAT_ALL, MLV_DB_STAT_ALL},
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
  {DB_STAT_LOCK_CONF, MLV_DB_STAT_LOCK_CONF},
  {DB_STAT_LOCK_LOCKERS, MLV_DB_STAT_LOCK_LOCKERS},
  {DB_STAT_LOCK_OBJECTS, MLV_DB_STAT_LOCK_OBJECTS},
  {DB_STAT_LOCK_PARAMS, MLV_DB_STAT_LOCK_PARAMS},
};

static map_flag flags_dbenv_lock_vec[] = {
  {DB_LOCK_NOWAIT, MLV_DB_LOCK_NOWAIT},
};

static map_flag flags_log_archive[] = {
  {DB_ARCH_ABS, MLV_DB_ARCH_ABS},
  {DB_ARCH_DATA, MLV_DB_ARCH_DATA},
  {DB_ARCH_LOG, MLV_DB_ARCH_LOG},
  {DB_ARCH_REMOVE, MLV_DB_ARCH_REMOVE},
};

static map_flag flags_log_put[] = {
  {DB_FLUSH, MLV_DB_FLUSH},
};

static map_flag flags_log_config[] = {
  {DB_LOG_DIRECT, MLV_DB_LOG_DIRECT},
  {DB_LOG_DSYNC, MLV_DB_LOG_DSYNC},
  {DB_LOG_AUTO_REMOVE, MLV_DB_LOG_AUTO_REMOVE},
  {DB_LOG_IN_MEMORY, MLV_DB_LOG_IN_MEMORY},
  {DB_LOG_ZERO, MLV_DB_LOG_ZERO},
};

static map_flag flags_log_stat[] = {
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
};

static map_flag flags_log_stat_print[] = {
  {DB_STAT_ALL, MLV_DB_STAT_ALL},
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
};

static map_flag flags_db_logs_get[] = {
  {DB_CURRENT, MLV_DB_CURRENT},
  {DB_FIRST, MLV_DB_FIRST},
  {DB_LAST, MLV_DB_LAST},
  {DB_NEXT, MLV_DB_NEXT},
  {DB_PREV, MLV_DB_PREV},
  {DB_SET, MLV_DB_SET},
};

static map_flag flags_dbenv_memp_stat[] = {
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
};

static map_flag flags_dbenv_memp_stat_print[] = {
  {DB_STAT_ALL, MLV_DB_STAT_ALL},
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
  {DB_STAT_MEMP_HASH, MLV_DB_STAT_MEMP_HASH},
};

static map_flag flags_dbmpoolfile_get[] = {
  {DB_MPOOL_CREATE, MLV_DB_MPOOL_CREATE},
  {DB_MPOOL_DIRTY, MLV_DB_MPOOL_DIRTY},
  {DB_MPOOL_EDIT, MLV_DB_MPOOL_EDIT},
  {DB_MPOOL_LAST, MLV_DB_MPOOL_LAST},
  {DB_MPOOL_NEW, MLV_DB_MPOOL_NEW},
};

static map_flag flags_dbmpoolfile_open[] = {
  {DB_CREATE, MLV_DB_CREATE},
  {DB_DIRECT, MLV_DB_DIRECT},
  {DB_MULTIVERSION, MLV_DB_MULTIVERSION},
  {DB_NOMMAP, MLV_DB_NOMMAP},
  {DB_ODDFILESIZE, MLV_DB_ODDFILESIZE},
  {DB_RDONLY, MLV_DB_RDONLY},
};

static map_flag flags_dbmpoolfile[] = {
  {DB_MPOOL_NOFILE, MLV_DB_MPOOL_NOFILE},
  {DB_MPOOL_UNLINK, MLV_DB_MPOOL_UNLINK},
};

static map_flag flags_mutex_alloc[] = {
  {DB_MUTEX_PROCESS_ONLY, MLV_DB_MUTEX_PROCESS_ONLY},
  {DB_MUTEX_SELF_BLOCK, MLV_DB_MUTEX_SELF_BLOCK},
};

static map_flag flags_mutex_stat[] = {
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
};

static map_flag flags_mutex_stat_print[] = {
  {DB_STAT_ALL, MLV_DB_STAT_ALL},
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
};

static map_flag flags_rep_transport[] = {
  {DB_REP_ANYWHERE, MLV_DB_REP_ANYWHERE},
  {DB_REP_NOBUFFER, MLV_DB_REP_NOBUFFER},
  {DB_REP_PERMANENT, MLV_DB_REP_PERMANENT},
  {DB_REP_REREQUEST, MLV_DB_REP_REREQUEST},
};

static map_flag flags_rep_start[] = {
  {DB_REP_CLIENT, MLV_DB_REP_CLIENT},
  {DB_REP_MASTER, MLV_DB_REP_MASTER},
};

static map_flag flags_rep_stat[] = {
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
};

static map_flag flags_rep_stat_print[] = {
  {DB_STAT_ALL, MLV_DB_STAT_ALL},
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
};

static map_flag flags_repmgr_add_remote_site[] = {
  {DB_REPMGR_PEER, MLV_DB_REPMGR_PEER},
};

static map_flag flags_repmgr_start[] = {
  {DB_REP_MASTER, MLV_DB_REP_MASTER},
  {DB_REP_CLIENT, MLV_DB_REP_CLIENT},
  {DB_REP_ELECTION, MLV_DB_REP_ELECTION},
};

static map_flag flags_repmgr_stat[] = {
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
};

static map_flag flags_repmgr_stat_print[] = {
  {DB_STAT_ALL, MLV_DB_STAT_ALL},
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
};

static map_flag flags_dbsequence_get[] = {
  {DB_TXN_NOSYNC, MLV_DB_TXN_NOSYNC},
};

static map_flag flags_dbsequence_open[] = {
  {DB_CREATE, MLV_DB_CREATE},
  {DB_EXCL, MLV_DB_EXCL},
  {DB_THREAD, MLV_DB_THREAD},
};

static map_flag flags_dbsequence_remove[] = {
  {DB_TXN_NOSYNC, MLV_DB_TXN_NOSYNC},
};

static map_flag flags_dbsequence[] = {
  {DB_SEQ_DEC, MLV_DB_SEQ_DEC},
  {DB_SEQ_INC, MLV_DB_SEQ_INC},
  {DB_SEQ_WRAP, MLV_DB_SEQ_WRAP},
};

static map_flag flags_dbsequence_stat[] = {
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
};

static map_flag flags_dbsequence_stat_print[] = {
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
};

static map_flag flags_dbenv_txn_begin[] = {
  {DB_READ_COMMITTED, MLV_DB_READ_COMMITTED},
  {DB_READ_UNCOMMITTED, MLV_DB_READ_UNCOMMITTED},
  {DB_TXN_NOSYNC, MLV_DB_TXN_NOSYNC},
  {DB_TXN_NOWAIT, MLV_DB_TXN_NOWAIT},
  {DB_TXN_SNAPSHOT, MLV_DB_TXN_SNAPSHOT},
  {DB_TXN_SYNC, MLV_DB_TXN_SYNC},
  {DB_TXN_WAIT, MLV_DB_TXN_WAIT},
  {DB_TXN_WRITE_NOSYNC, MLV_DB_TXN_WRITE_NOSYNC},
};

static map_flag flags_dbenv_txn_checkpoint[] = {
  {DB_FORCE, MLV_DB_FORCE},
};

static map_flag flags_dbtxn_commit[] = {
  {DB_TXN_NOSYNC, MLV_DB_TXN_NOSYNC},
  {DB_TXN_SYNC, MLV_DB_TXN_SYNC},
};

static map_flag flags_dbenv_txn_recover[] = {
  {DB_FIRST, MLV_DB_FIRST},
  {DB_NEXT, MLV_DB_NEXT},
};

static map_flag flags_dbtxn_timeout[] = {
  {DB_SET_LOCK_TIMEOUT, MLV_DB_SET_LOCK_TIMEOUT},
  {DB_SET_TXN_TIMEOUT, MLV_DB_SET_TXN_TIMEOUT},
};

static map_flag flags_dbenv_txn_stat[] = {
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
};

static map_flag flags_dbenv_txn_stat_print[] = {
  {DB_STAT_ALL, MLV_DB_STAT_ALL},
  {DB_STAT_CLEAR, MLV_DB_STAT_CLEAR},
};

static map_flag flags_dblogc_get[] = {
  {DB_CURRENT, MLV_DB_CURRENT},
  {DB_FIRST, MLV_DB_FIRST},
  {DB_LAST, MLV_DB_LAST},
  {DB_NEXT, MLV_DB_NEXT},
  {DB_PREV, MLV_DB_PREV},
  {DB_SET, MLV_DB_SET},
};

